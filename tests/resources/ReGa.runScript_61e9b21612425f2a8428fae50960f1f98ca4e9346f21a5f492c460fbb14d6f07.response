{"version": "1.1","result": "system.describe \{\r\n  LEVEL NONE\r\n  SCRIPT_FILE system\/describe.tcl\r\n  INFO \{Liefert eine detailierte Beschreibung der HomeMatic JSON API.}\r\n  ARGUMENTS \{}\r\n}\r\n\r\nsystem.listMethods \{\r\n\tLEVEL NONE\r\n\tSCRIPT_FILE system\/listmethods.tcl\r\n\tINFO \{Liefert eine Liste der verfügbaren Methoden}\r\n\tARGUMENTS \{}\r\n}\r\n\r\nsystem.methodHelp \{\r\n\tLEVEL NONE\r\n\tSCRIPT_FILE system\/methodhelp.tcl\r\n\tINFO  \{Liefert die Kurzbeschreibung einer Methode}\r\n\tARGUMENTS \{name}\r\n}\r\nsystem.saveObjectModel \{\r\n\tLEVEL NONE\r\n\tSCRIPT_FILE system\/saveobjectmodel.tcl\r\n\tINFO  \{Speichert das Object Model}\r\n\tARGUMENTS \{}\r\n}\r\n\r\nsystem.getEnergyPrice \{\r\n\tLEVEL NONE\r\n\tSCRIPT_FILE system\/getenergyprice.tcl\r\n\tINFO  \{Ermittelt den Preis einer KW\/h}\r\n\tARGUMENTS \{}\r\n}\r\n\r\nInterface.activateLinkParamset \{\r\n\tLEVEL ADMIN\r\n\tSCRIPT_FILE interface\/dispatch.tcl\r\n\tMETHOD_FILE\tinterface\/activatelinkparamset.tcl\r\n\tINFO \{Aktiviert ein Link-Parameterset}\r\n\tARGUMENTS \{_session_id_ interface address peerAddress longPress}\r\n}\r\n\r\nInterface.addDevice \{\r\n\tLEVEL ADMIN\r\n\tSCRIPT_FILE interface\/dispatch.tcl\r\n\tMETHOD_FILE interface\/adddevice.tcl\r\n\tINFO \{Lernt ein Gerät anhand seiner Seriennummer an}\r\n\tARGUMENTS \{_session_id_ interface serialNumber}\r\n}\r\n\r\nInterface.addLink \{\r\n\tLEVEL ADMIN\r\n\tSCRIPT_FILE interface\/dispatch.tcl\r\n\tMETHOD_FILE interface\/addlink.tcl\r\n\tINFO \{Erstellt eine direkte Verknüpfung}\r\n\tARGUMENTS \{_session_id_ interface sender receiver name description}\r\n}\r\n\r\nInterface.changeKey \{\r\n\tLEVEL ADMIN\r\n\tSCRIPT_FILE interface\/dispatch.tcl\r\n\tMETHOD_FILE interface\/changekey.tcl\r\n\tINFO \{Ändert den AES-Schlüssel}\r\n\tARGUMENTS \{_session_id_ interface passphrase}\r\n}\r\n\r\nInterface.clearConfigCache \{\r\n\tLEVEL ADMIN\r\n\tSCRIPT_FILE interface\/dispatch.tcl\r\n\tMETHOD_FILE interface\/clearconfigcache.tcl\r\n\tINFO \{Löscht die auf der HomeMatic Zentrale gespeicherten Konfigurationsdaten für ein Gerät}\r\n\tARGUMENTS \{_session_id_ interface address}\r\n}\r\n\r\nInterface.deleteDevice \{\r\n\tLEVEL ADMIN\r\n\tSCRIPT_FILE interface\/dispatch.tcl\r\n\tMETHOD_FILE interface\/deletedevice.tcl\r\n\tINFO \{Löscht ein Gerät}\r\n\tARGUMENTS \{_session_id_ interface address flags}\r\n}\r\n\r\nInterface.determineParameter \{\r\n\tLEVEL ADMIN\r\n\tSCRIPT_FILE interface\/dispatch.tcl\r\n\tMETHOD_FILE interface\/determineparameter.tcl\r\n\tINFO \{Bestimmt den Wert eines Patameters}\r\n\tARGUMENTS \{_session_id_ interface address paramsetKey parameterId}\r\n}\r\n\r\nInterface.getDeviceDescription \{\r\n\tLEVEL GUEST\r\n\tSCRIPT_FILE interface\/dispatch.tcl\r\n\tMETHOD_FILE interface\/getdevicedescription.tcl\r\n\tINFO \{Liefert die Beschreibung eines Geräts}\r\n\tARGUMENTS \{_session_id_ interface address}\r\n}\r\n\r\nInterface.getInstallMode \{\r\n\tLEVEL ADMIN\r\n\tSCRIPT_FILE interface\/dispatch.tcl\r\n\tMETHOD_FILE interface\/getinstallmode.tcl\r\n\tINFO \{Liefert die Restzeit, für die der Anlernmodus noch aktiv ist}\r\n\tARGUMENTS \{_session_id_ interface}\r\n}\r\n\r\nInterface.getKeyMissmatchDevice \{\r\n\tLEVEL ADMIN\r\n\tSCRIPT_FILE interface\/dispatch.tcl\r\n\tMETHOD_FILE interface\/getkeymissmatchdevice.tcl\r\n  INFO \{Liefert die Seriennummer des letzten Gerätes, welches nicht angelernt werden konnte}\r\n\tARGUMENTS \{_session_id_ interface reset}\r\n}\r\n\r\nInterface.getLinkInfo \{\r\n\tLEVEL GUEST\r\n\tSCRIPT_FILE interface\/dispatch.tcl\r\n\tMETHOD_FILE interface\/getlinkinfo.tcl\r\n\tINFO \{Liefert den Namen und die Beschreibung einer direkten Verknüpfung}\r\n\tARGUMENTS \{_session_id_ interface senderAddress receiverAddress}\r\n}\r\n\r\nInterface.getLinkPeers \{\r\n\tLEVEL GUEST\r\n\tSCRIPT_FILE interface\/dispatch.tcl\r\n\tMETHOD_FILE interface\/getlinkpeers.tcl\r\n\tINFO \{Liefert alle Kommukationspartner eines Geräts}\r\n\tARGUMENTS \{_session_id_ interface address}\r\n}\r\n\r\nInterface.getLinks \{\r\n\tLEVEL GUEST\r\n\tSCRIPT_FILE interface\/dispatch.tcl\r\n\tMETHOD_FILE interface\/getlinks.tcl\r\n\tINFO \{Liefert für ein Gerät oder einen Kanal alle dirketen Verknüpfungen}\r\n\tARGUMENTS \{_session_id_ interface address flags}\r\n}\r\n\r\nInterface.getLogLevel \{\r\n\tLEVEL GUEST\r\n\tSCRIPT_FILE interface\/dispatch.tcl\r\n\tMETHOD_FILE interface\/getloglevel.tcl\r\n\tINFO \{Liefert die aktuelle Stufe der Fehlerprotokollierung}\r\n\tARGUMENTS \{_session_id_ interface}\r\n}\r\n\r\nInterface.getParamset \{\r\n\tLEVEL GUEST\r\n\tSCRIPT_FILE interface\/dispatch.tcl\r\n\tMETHOD_FILE interface\/getparamset.tcl\r\n\tINFO \{Liefert ein komplettes Parameterset}\r\n\tARGUMENTS \{_session_id_ interface address paramsetKey}\r\n}\r\n\r\nInterface.getParamsetDescription \{\r\n\tLEVEL GUEST\r\n\tSCRIPT_FILE interface\/dispatch.tcl\r\n\tMETHOD_FILE interface\/getparamsetdescription.tcl\r\n\tINFO \{Liefert die Beschreibung eines Parametersets}\r\n\tARGUMENTS \{_session_id_ interface address paramsetType}\r\n}\r\n\r\nInterface.getParamsetId \{\r\n\tLEVEL GUEST\r\n\tSCRIPT_FILE interface\/dispatch.tcl\r\n\tMETHOD_FILE interface\/getparamsetid.tcl\r\n\tINFO \{Liefert die Id eines Parametersets}\r\n\tARGUMENTS \{_session_id_ interface address paramsetType}\r\n}\r\n\r\nInterface.getMasterValue \{\r\n\tLEVEL GUEST\r\n\tSCRIPT_FILE interface\/dispatch.tcl\r\n\tMETHOD_FILE interface\/getmastervalue.tcl\r\n\tINFO \{Liefert den Wert eines Parameters aus dem Parameterset \"MASTER\"}\r\n\tARGUMENTS \{_session_id_ interface address valueKey}\r\n}\r\n\r\nInterface.getServiceMessageCount \{\r\n\tLEVEL GUEST\r\n\tSCRIPT_FILE interface\/dispatch.tcl\r\n\tMETHOD_FILE interface\/getservicemessagecount.tcl\r\n\tINFO \{Liefert die Anzahl der aktiven Servicemeldungen}\r\n\tARGUMENTS \{_session_id_ interface}\r\n}\r\n\r\nInterface.getValue \{\r\n\tLEVEL GUEST\r\n\tSCRIPT_FILE interface\/dispatch.tcl\r\n\tMETHOD_FILE interface\/getvalue.tcl\r\n\tINFO \{Liefert den Wert eines Parameters aus dem Parameterset \"Values\"}\r\n\tARGUMENTS \{_session_id_ interface address valueKey}\r\n}\r\n\r\nInterface.init \{\r\n\tLEVEL ADMIN\r\n\tSCRIPT_FILE interface\/dispatch.tcl\r\n\tMETHOD_FILE interface\/init.tcl\r\n\tINFO \{Meldet eine Logikschicht bei einer Schnittstelle an}\r\n\tARGUMENTS \{_session_id_ interface url interfaceId}\r\n}\r\n\r\nInterface.isPresent \{\r\n\tLEVEL NONE\r\n\tSCRIPT_FILE interface\/dispatch.tcl\r\n\tMETHOD_FILE interface\/ispresent.tcl\r\n\tINFO \{Prüft, ob der Dienst der betreffenden Schnittstelle läuft)}\r\n\tARGUMENTS \{interface}\r\n}\r\n\r\nInterface.listDevices \{\r\n\tLEVEL GUEST\r\n\tSCRIPT_FILE interface\/dispatch.tcl\r\n\tMETHOD_FILE interface\/listdevices.tcl\r\n\tINFO \{Liefert eine Liste aller angelernten Geräte}\r\n\tARGUMENTS \{_session_id_ interface}\r\n}\r\n\r\nInterface.listInterfaces \{\r\n\tLEVEL GUEST\r\n\tSCRIPT_FILE interface\/listinterfaces.tcl\r\n\tINFO \{Liefert eine Liste der verfügbaren Schnittstellen}\r\n\tARGUMENTS \{_session_id_}\r\n}\r\n\r\nInterface.getLGWStatus \{\r\n\tLEVEL GUEST\r\n\tSCRIPT_FILE interface\/dispatch.tcl\r\n\tMETHOD_FILE interface\/getlgwstatus.tcl\r\n\tINFO \{Liefert den Status des BidCoS Wired Lan Gateways}\r\n\tARGUMENTS \{_session_id_ interface}\r\n}\r\n\r\nInterface.getLGWConnectionStatus \{\r\n\tLEVEL GUEST\r\n\tSCRIPT_FILE interface\/dispatch.tcl\r\n\tMETHOD_FILE interface\/getlgwconnectionstatus.tcl\r\n\tINFO \{Liefert den Verbindungsstatus des BidCoS Wired Lan Gateways}\r\n\tARGUMENTS \{_session_id_ interface serial}\r\n}\r\n\r\nInterface.listTeams \{\r\n\tLEVEL GUEST\r\n\tSCRIPT_FILE interface\/dispatch.tcl\r\n\tMETHOD_FILE interface\/listteams.tcl\r\n\tINFO \{Liefert die Gerätebeschreibungen aller Teams}\r\n\tARGUMENTS \{_session_id_ interface}\r\n}\r\n\r\nInterface.putParamset \{\r\n\tLEVEL ADMIN\r\n\tSCRIPT_FILE interface\/dispatch.tcl\r\n\tMETHOD_FILE interface\/putparamset.tcl\r\n\tINFO \{Schreibt ein komplettes Parameterset für ein Gerät}\r\n\tARGUMENTS \{_session_id_ interface address paramsetKey set}\r\n}\r\n\r\nInterface.refreshDeployedDeviceFirmwareList \{\r\n\tLEVEL ADMIN\r\n\tSCRIPT_FILE interface\/dispatch.tcl\r\n\tMETHOD_FILE interface\/refreshDeployedDeviceFirmwareList.tcl\r\n\tINFO \{Aktualisiert die Geraete-Firmware-Liste}\r\n\tARGUMENTS \{_session_id_ interface}\r\n}\r\n\r\nInterface.removeLink \{\r\n\tLEVEL ADMIN \r\n\tSCRIPT_FILE interface\/dispatch.tcl\r\n\tMETHOD_FILE interface\/removelink.tcl\r\n\tINFO \{Löscht eine direkte Verknüpfung}\r\n\tARGUMENTS \{_session_id_ interface sender receiver}\r\n}\r\n\r\nInterface.reportValueUsage \{\r\n\tLEVEL ADMIN\r\n\tSCRIPT_FILE interface\/dispatch.tcl\r\n\tMETHOD_FILE interface\/reportvalueusage.tcl\r\n\tINFO \{Teilt der Schnittstelle mit, wie häufig die Logikschicht einen Wert verwendet}\r\n\tARGUMENTS \{_session_id_ interface address valueId refCounter}\r\n}\r\n\r\nInterface.restoreConfigToDevice \{\r\n\tLEVEL ADMIN\r\n\tSCRIPT_FILE interface\/dispatch.tcl\r\n\tMETHOD_FILE interface\/restoreconfigtodevice.tcl\r\n\tINFO \{Überträgt alle Konfigurationsdaten erneut an ein Gerät}\r\n\tARGUMENTS \{_session_id_ interface address}\r\n}\r\n\r\nInterface.rssiInfo \{\r\n\tLEVEL GUEST\r\n\tSCRIPT_FILE interface\/dispatch.tcl\r\n\tMETHOD_FILE interface\/rssiinfo.tcl\r\n\tINFO \{Liefert die Empfangsfeldstärken der angeschlossenen Geräte}\r\n\tARGUMENTS \{_session_id_ interface}\r\n}\r\n\r\nInterface.searchDevices \{\r\n\tLEVEL ADMIN\r\n\tSCRIPT_FILE interface\/dispatch.tcl\r\n\tMETHOD_FILE interface\/searchdevices.tcl\r\n\tINFO \{Sucht auf dem Bus nach neuen Geräte}\r\n\tARGUMENTS \{_session_id_ interface}\r\n}\r\n\r\nInterface.setInstallMode \{\r\n\tLEVEL ADMIN\r\n\tSCRIPT_FILE interface\/dispatch.tcl\r\n\tMETHOD_FILE interface\/setinstallmode.tcl\r\n\tINFO \{Aktiviert oder dekativiert den Anlernmodus}\r\n\tARGUMENTS \{_session_id_ interface on}\r\n}\r\n\r\nInterface.setLinkInfo \{\r\n\tLEVEL ADMIN\r\n\tSCRIPT_FILE interface\/dispatch.tcl\r\n\tMETHOD_FILE interface\/setlinkinfo.tcl\r\n\tINFO \{Legt den Namen und die Beschreibung einer direkten Verknüpfung fest}\r\n\tARGUMENTS \{_session_id_ interface sender receiver name description}\r\n}\r\n\r\nInterface.setLogLevel \{\r\n\tLEVEL ADMIN\r\n\tSCRIPT_FILE interface\/dispatch.tcl\r\n\tMETHOD_FILE interface\/setloglevel.tcl\r\n\tINFO \{Legt die Stufe der Fehlerprotokollierung fest}\r\n\tARGUMENTS \{_session_id_ interface level}\r\n}\r\n\r\nInterface.setTeam \{\r\n\tLEVEL ADMIN\r\n\tSCRIPT_FILE interface\/dispatch.tcl\r\n\tMETHOD_FILE interface\/setteam.tcl\r\n\tINFO \{Fügt einem Team einen Kanal hinzu}\r\n\tARGUMENTS \{_session_id_ inteface channelAddress teamAddress}\r\n}\r\n\r\nInterface.setTempKey \{\r\n\tLEVEL ADMIN \r\n\tSCRIPT_FILE interface\/dispatch.tcl\r\n\tMETHOD_FILE interface\/settempkey.tcl\r\n\tINFO \{Ändert den temporären AES-Schlüssel}\r\n\tARGUMENTS \{_session_id_ interface passphrase}\r\n}\r\n\r\nInterface.setValue \{\r\n\tLEVEL GUEST\r\n\tSCRIPT_FILE interface\/dispatch.tcl\r\n\tMETHOD_FILE interface\/setvalue.tcl\r\n\tINFO \{Setzt einen einzelnen Wert im Parameterset \"Values\"}\r\n\tARGUMENTS \{_session_id_ interface address valueKey type value}\r\n}\r\n\r\nInterface.updateFirmware \{\r\n\tLEVEL ADMIN\r\n\tSCRIPT_FILE interface\/dispatch.tcl\r\n\tMETHOD_FILE interface\/updatefirmware.tcl\r\n\tINFO \{Aktualisiert die Firmware der angegebenen Geräte}\r\n\tARGUMENTS \{_session_id_ interface device}\r\n}\r\n\r\nInterface.changeDevice \{\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE interface\/dispatch.tcl\r\n  METHOD_FILE interface\/changedevice.tcl\r\n  INFO \{Tauscht ein Gerät gegen ein anderes aus.}\r\n  ARGUMENTS \{_session_id_ interface addressNewDevice addressOldDevice}\r\n}\r\n\r\nInterface.listBidcosInterfaces \{\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE interface\/dispatch.tcl\r\n  METHOD_FILE interface\/listbidcosinterfaces.tcl\r\n  INFO \{Listet die verfügbaren BidCoS-RF Interfaces auf}\r\n  ARGUMENTS \{_session_id_ interface}\r\n}\r\n\r\nInterface.setBidcosInterface \{\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE interface\/dispatch.tcl\r\n  METHOD_FILE interface\/setbidcosinterface.tcl\r\n  INFO \{Ordnet ein Geräte einem BidCoS-RF Interface zu}\r\n  ARGUMENTS \{_session_id_ interface deviceId interfaceId roaming}\r\n}\r\n\r\nReGa.isPresent \{\r\n\tLEVEL NONE\r\n\tSCRIPT_FILE rega\/ispresent.tcl\r\n\tINFO \{Prüft, ob die Logikschicht (ReGa) aktiv ist}\r\n\tARGUMENTS \{}\r\n}\r\n\r\nReGa.runScript \{\r\n\tLEVEL ADMIN\r\n\tSCRIPT_FILE rega\/runscript.tcl\r\n\tINFO \{Führt ein HomeMatic Script aus}\r\n\tARGUMENTS \{_session_id_ script}\r\n}\r\n\r\nDevice.listAll \{\r\n\tLEVEL GUEST\r\n\tSCRIPT_FILE device\/listall.tcl\r\n\tINFO \{Liefert die Ids aller fertig konfigurierten Geräte}\r\n\tARGUMENTS \{_session_id_}\r\n}\r\nDevice.listAllDetail \{\r\n\tLEVEL GUEST\r\n\tSCRIPT_FILE device\/listalldetail.tcl\r\n\tINFO \{Liefert die Detailinformationen aller fertig konfigurierten Geräte}\r\n\tARGUMENTS \{_session_id_}\r\n}\r\n\r\nDevice.get \{\r\n\tLEVEL GUEST\r\n\tSCRIPT_FILE device\/get.tcl\r\n\tINFO \{Liefert Detailinformationen zu einem Gerät}\r\n\tARGUMENTS \{_session_id_ id}\r\n}\r\n\r\nDevice.setName \{\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE device\/setname.tcl\r\n  INFO \{Legt den Namen des Geräts fest}\r\n  ARGUMENTS \{_session_id_ id name}\r\n}\r\n\r\nDevice.getReGaIDByAddress \{\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE device\/getregaidbyaddress.tcl\r\n  INFO \{Ermittelt die ReGa-ID eines Gerätes aufgrund der Seriennummer}\r\n  ARGUMENTS \{_session_id_ address}\r\n}\r\n\r\nDevice.hasLinksOrPrograms \{\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE device\/haslinksorprograms.tcl\r\n  INFO \{Ermittelt, ob das Geräte in direkten Verknüpfungen oder Programmen verwendet wird}\r\n  ARGUMENTS \{_session_id_ id}\r\n}\r\n\r\nDevice.listProgramIds \{\r\n  LEVEL GUEST\r\n  SCRIPT_FILE device\/listprogramids.tcl\r\n  INFO \{Liefert die Ids aller Programme, die mindestens einen Kanal des Geräts verwenden}\r\n  ARGUMENTS \{_session_id_ id}\r\n}\r\n\r\nDevice.setOperateGroupOnly \{\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE device\/setoperategrouponly.tcl\r\n  INFO \{Legt die Bedienbarkeit des Geräts fest}\r\n  ARGUMENTS \{_session_id_ id mode}\r\n}\r\n\r\nDevice.startComTest \{\r\n  LEVEL GUEST\r\n  SCRIPT_FILE device\/startcomtest.tcl\r\n  INFO \{Startet den Funktionstest für ein Gerät}\r\n  ARGUMENTS \{_session_id_ id}\r\n}\r\n\r\nDevice.pollComTest \{\r\n  LEVEL GUEST\r\n  SCRIPT_FILE device\/pollcomtest.tcl\r\n  INFO \{Prüft, ob Ergebnisse für einen Funktionstest vorliegen}\r\n  ARGUMENTS \{_session_id_ id testId}\r\n}\r\n\r\nEvent.subscribe \{\r\n\tLEVEL GUEST\r\n\tSCRIPT_FILE event\/subscribe.tcl\r\n\tINFO \{Anmeldung für Ereignisbenachrichtigungen}\r\n\tARGUMENTS \{_session_id_}\r\n}\r\n\r\nEvent.unsubscribe \{\r\n\tLEVEL GUEST\r\n\tSCRIPT_FILE event\/unsubscribe.tcl\r\n\tINFO \{Abmeldung für Ereignisbenachrichtigungen}\r\n\tARGUMENTS \{_session_id_}\r\n}\r\n\r\nEvent.poll \{\r\n\tLEVEL GUEST\r\n\tSCRIPT_FILE event\/poll.tcl\r\n\tINFO \{Fragt Ereignisse ab}\r\n\tARGUMENTS \{_session_id_}\r\n}\r\n\r\nRoom.listAll \{\r\n\tLEVEL GUEST\r\n\tSCRIPT_FILE room\/listall.tcl\r\n\tINFO \{Liefert eine Liste aller Räume}\r\n\tARGUMENTS \{_session_id_}\r\n}\r\n\r\nRoom.getAll \{\r\n  LEVEL GUEST\r\n  SCRIPT_FILE room\/getall.tcl\r\n  INFO \{Liefert Detailinformationen zu allen Räumen}\r\n  ARGUMENTS \{_session_id_}\r\n}\r\n\r\nRoom.get \{\r\n\tLEVEL GUEST\r\n\tSCRIPT_FILE room\/get.tcl\r\n\tINFO \{Liefert Detailinfomationen zu einem Raum}\r\n\tARGUMENTS \{_session_id_  id}\r\n}\r\n\r\nRoom.listProgramIds \{\r\n  LEVEL GUEST\r\n  SCRIPT_FILE room\/listprogramids.tcl\r\n  INFO \{Liefert die Ids aller Programme, die mindestens einen Kanal in dem Raum verwenden}\r\n  ARGUMENTS \{_session_id_ id}\r\n}\r\n\r\nRoom.addChannel \{\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE room\/addchannel.tcl\r\n  INFO \{Fügt einen Kanal zu einem Raum hinzu}\r\n  ARGUMENTS \{_session_id_ id channelId}\r\n}\r\n\r\nRoom.removeChannel \{\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE room\/removechannel.tcl\r\n  INFO \{Entfernt einen Kanal aus einem Raum}\r\n  ARGUMENTS \{_session_id_ id channelId}\r\n}\r\n\r\nSubsection.listAll \{\r\n  LEVEL GUEST\r\n  SCRIPT_FILE subsection\/listall.tcl\r\n  INFO \{Liefert eine Liste aller Gewerke}\r\n  ARGUMENTS \{_session_id_}\r\n}\r\n\r\nSubsection.getAll \{\r\n  LEVEL GUEST\r\n  SCRIPT_FILE subsection\/getall.tcl\r\n  INFO \{Liefert Detailinformationen zu allen Gewerken}\r\n  ARGUMENTS \{_session_id_}\r\n}\r\n\r\nSubsection.get \{\r\n  LEVEL GUEST\r\n  SCRIPT_FILE subsection\/get.tcl\r\n  INFO \{Liefert Detailinformationen zu einem Gewerk}\r\n  ARGUMENTS \{_session_id_ id}\r\n}\r\n\r\nSubsection.listProgramIds \{\r\n  LEVEL GUEST\r\n  SCRIPT_FILE subsection\/listprogramids.tcl\r\n  INFO \{Liefert die Ids aller Programme, die mindesten einen Kanal in dem Raum verwenden}\r\n  ARGUMENTS \{_session_id_ id}\r\n}\r\n\r\nSubsection.addChannel \{\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE subsection\/addchannel.tcl\r\n  INFO \{Fügt dem Gewerk einen Kanal hinzu}\r\n  ARGUMENTS \{_session_id_ id channelId}\r\n}\r\n\r\nSubsection.removeChannel \{\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE subsection\/removechannel.tcl\r\n  INFO \{Entfernt einen Kanal aus einem Gewerk}\r\n  ARGUMENTS \{_session_id_ id channelId}\r\n}\r\n\r\nChannel.listProgramIds \{\r\n  LEVEL GUEST\r\n  SCRIPT_FILE channel\/listprogramids.tcl\r\n  INFO \{Liefert die Ids aller Programme, in denen der Kanal verwendet wird}\r\n  ARGUMENTS \{_session_id_ id}\r\n}\r\n\r\nChannel.setName \{\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE channel\/setname.tcl\r\n  INFO \{Legt den Namen des Kanals fest}\r\n  ARGUMENTS \{_session_id_ id}\r\n}\r\n\r\nChannel.getName \{\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE channel\/getname.tcl\r\n  INFO \{Liefert den Namen des Kanals}\r\n  ARGUMENTS \{_session_id_ address}\r\n}\r\nChannel.getValue \{\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE channel\/getvalue.tcl\r\n  INFO \{Liefert den Wert des Kanals}\r\n  ARGUMENTS \{_session_id_ id}\r\n}\r\nChannel.setUsability \{\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE channel\/setusability.tcl\r\n  INFO \{Legt fest, ob der Kanal für normale Anwender bedienbar}\r\n  ARGUMENTS \{_session_id_ id isUsable}\r\n}\r\n\r\nChannel.setVisibility \{\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE channel\/setvisibility.tcl\r\n  INFO \{Legt fest, ob der Kanal für normale Anwender sichtbar ist}\r\n  ARGUMENTS \{_session_id_ id isVisible}\r\n}\r\n\r\nChannel.setLogging \{\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE channel\/setlogging.tcl\r\n  INFO \{Aktiviert bzw. deaktiviert die Protokollierung des Kanals}\r\n  ARGUMENTS \{_session_id_ id isLogged}\r\n}\r\n\r\nChannel.setMode \{\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE channel\/setmode.tcl\r\n  INFO \{Legt den Übertragungs-Modus (Standard oder Gesichert (AES)) des Kanals fest}\r\n  ARGUMENTS \{_session_id_ id}\r\n}\r\n\r\nChannel.startComTest \{\r\n  LEVEL GUEST\r\n  SCRIPT_FILE channel\/startcomtest.tcl\r\n  INFO \{Startet den Funktionstest für den Kanal}\r\n  ARGUMENTS \{_session_id_ id}\r\n}\r\n\r\nChannel.pollComTest \{\r\n  LEVEL GUEST\r\n  SCRIPT_FILE channel\/pollcomtest.tcl\r\n  INFO \{Fragt das Ergebnis eines laufenden Funktionstests ab}\r\n  ARGUMENTS \{_session_id_ id testId}\r\n}\r\n\r\nSession.login \{\r\n  LEVEL NONE\r\n  SCRIPT_FILE session\/login.tcl\r\n  INFO \{Führt die Benutzeranmeldung durch}\r\n  ARGUMENTS \{username password}\r\n}\r\n\r\nSession.logout \{\r\n  LEVEL NONE\r\n  SCRIPT_FILE session\/logout.tcl\r\n  INFO \{Beendet eine Sitzung}\r\n  ARGUMENTS \{_session_id_}\r\n}\r\n\r\nSession.renew \{\r\n  LEVEL GUEST\r\n  SCRIPT_FILE session\/renew.tcl\r\n  INFO \{Erneuert die Sitzung; Falls eine Sitzung nicht rechtzeitig erneuert wird, läuft diese ab}\r\n  ARGUMENTS \{_session_id_}\r\n}\r\n\r\nSession.setSessionVar \{\r\n  LEVEL GUEST\r\n  SCRIPT_FILE session\/setsessionvar.tcl\r\n  INFO \{Setzt eine Session Variable}\r\n  ARGUMENTS \{var val}\r\n}\r\n\r\nProgram.getAll \{\r\n  LEVEL USER\r\n  SCRIPT_FILE program\/getall.tcl\r\n  INFO \{Liefert Detailinformationen zu allen Programmen auf der HomeMatic Zentrale}\r\n  ARGUMENTS \{_session_id_}\r\n}\r\n\r\nProgram.get \{\r\n  LEVEL USER\r\n  SCRIPT_FILE program\/get.tcl\r\n  INFO \{Liefert Detailinformationen zu einem Programm auf der HomeMatic Zentrale}\r\n  ARGUMENTS \{_session_id_ id}\r\n}\r\n\r\nProgram.execute \{\r\n  LEVEL USER\r\n  SCRIPT_FILE program\/execute.tcl\r\n  INFO \{Führt ein Programm auf der HomeMatic Zentrale aus}\r\n  ARGUMENTS \{_session_id_ id}\r\n}\r\n\r\nProgram.deleteProgramByName \{\r\n  LEVEL USER\r\n  SCRIPT_FILE program\/deleteprogrambyname.tcl\r\n  INFO \{Löscht ein Programm mit bestimmten Namen}\r\n  ARGUMENTS \{_session_id_ name}\r\n}\r\n\r\nSysVar.getAll \{\r\n  LEVEL USER\r\n  SCRIPT_FILE sysvar\/getall.tcl\r\n  INFO \{Liefert Detailinformationen zu allen Systemvariablen auf der HomeMatic Zentrale}\r\n  ARGUMENTS \{_session_id_}\r\n}\r\n\r\nSysVar.get \{\r\n  LEVEL USER\r\n  SCRIPT_FILE sysvar\/get.tcl\r\n  INFO \{Liefert Detailinformationen zu einer Systemvariable auf der HomeMatic Zentrale}\r\n  ARGUMENTS \{_session_id_ id}\r\n}\r\n\r\nSysVar.getValue \{\r\n  LEVEL USER\r\n  SCRIPT_FILE sysvar\/getvalue.tcl\r\n  INFO \{Liefert den aktuellen Wert einer Systemvariable}\r\n  ARGUMENTS \{_session_id_ id}\r\n}\r\nSysVar.getValueByName \{\r\n  LEVEL USER\r\n  SCRIPT_FILE sysvar\/getvaluebyname.tcl\r\n  INFO \{Liefert den aktuellen Wert einer Systemvariable}\r\n  ARGUMENTS \{_session_id_ name}\r\n}\r\nSysVar.createBool \{\r\n  LEVEL USER\r\n  SCRIPT_FILE sysvar\/createbool.tcl\r\n  INFO \{Erzeugt eine Systemvariable vom Typ bool}\r\n  ARGUMENTS \{_session_id_ name init_val internal}\r\n}\r\nSysVar.setBool \{\r\n  LEVEL USER\r\n  SCRIPT_FILE sysvar\/setbool.tcl\r\n  INFO \{Setzt den Wert einer Systemvariable vom Type bool}\r\n  ARGUMENTS \{_session_id_ name value}\r\n}\r\nSysVar.createFloat \{\r\n  LEVEL USER\r\n  SCRIPT_FILE sysvar\/createfloat.tcl\r\n  INFO \{Erzeugt eine Systemvariable vom Typ Number}\r\n  ARGUMENTS \{_session_id_ name minValue maxValue internal}\r\n}\r\nSysVar.setFloat \{\r\n  LEVEL USER\r\n  SCRIPT_FILE sysvar\/setfloat.tcl\r\n  INFO \{Setzt den Wert einer Systemvariable vom Type float}\r\n  ARGUMENTS \{_session_id_ name value}\r\n}\r\nSysVar.deleteSysVarByName \{\r\n  LEVEL USER\r\n  SCRIPT_FILE sysvar\/deletesysvarbyname.tcl\r\n  INFO \{Entfernt eine Systemvariable mit bestimmten Namen}\r\n  ARGUMENTS \{_session_id_ name}\r\n}\r\nBidCoS_RF.getConfigurationRF \{\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE bidcosrf\/getconfiguration-rf.tcl\r\n  INFO \{Liefert die aktuelle Konfiguration des BidCoS-RF Dienstes}\r\n  ARGUMENTS \{_session_id_}\r\n}\r\n\r\nBidCoS_RF.setConfigurationRF \{\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE bidcosrf\/setconfiguration-rf.tcl\r\n  INFO \{Setzt die Konfiguration des BidCoS-RF Dienstes}\r\n  ARGUMENTS \{_session_id_ interfaces}\r\n}\r\n\r\nBidCoS_RF.createKeyFile \{\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE bidcosrf\/createkeyfile.tcl\r\n  INFO \{Generiert die Datei \/etc\/config\/keys}\r\n  ARGUMENTS \{_session_id_ key}\r\n}\r\n\r\nBidCoS_RF.isKeySet \{\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE bidcosrf\/iskeyset.tcl\r\n  INFO \{Ermittelt, ob ein Systemsicherheitsschlüssel im ARM7 gesetzt ist}\r\n  ARGUMENTS \{_session_id_}\r\n}\r\n\r\nBidCoS_RF.validateKey \{\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE bidcosrf\/validatekey.tcl\r\n  INFO \{Prüft, ob der angegebe Schlüssel dem System-Sicherheitsschlüssel entspricht}\r\n  ARGUMENTS \{_session_id_ key}\r\n}\r\n\r\nFirewall.getConfiguration \{\r\n\tLEVEL ADMIN\r\n\tSCRIPT_FILE firewall\/getconfiguration.tcl\r\n\tINFO \{Liefert die aktuelle Konfiguration der Firewall}\r\n\tARGUMENTS \{_session_id_}\r\n}\r\n\r\nFirewall.setConfiguration \{\r\n\tLEVEL ADMIN\r\n\tSCRIPT_FILE firewall\/setconfiguration.tcl\r\n\tINFO \{Setzt die Konfiguration der Firewall}\r\n\tARGUMENTS \{_session_id_ services ips}\r\n}\r\n\r\nWebUI.getColors \{\r\n  LEVEL NONE\r\n  SCRIPT_FILE webui\/getcolors.tcl\r\n  INFO \{Liefert die Systemfarben der HomeMatic WebUI}\r\n  ARGUMENTS \{ }\r\n}\r\n\r\nSafeMode.enter \{\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE safemode\/enter.tcl\r\n  INFO \{Startet die HomeMatic Zentrale im angesicherten Modus}\r\n  ARGUMENTS \{_session_id_}\r\n}\r\n\r\nCCU.getSerial \{\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE ccu\/getserial.tcl\r\n  INFO \{Liefert die Seriennummer der HomeMatic Zentrale}\r\n  ARGUMENTS \{_session_id_}\r\n}\r\nCCU.getVersion \{\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE ccu\/getversion.tcl\r\n  INFO \{Liefert die Firmware-Version der HomeMatic Zentrale}\r\n  ARGUMENTS \{_session_id_}\r\n}\r\nCCU.setSSH \{\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE ccu\/setssh.tcl\r\n  INFO \{Aktiviert oder. deaktiviert den SSH-Zugang der HomeMatic Zentrale}\r\n  ARGUMENTS \{_session_id_ mode}\r\n}\r\nCCU.getSSHState \{\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE ccu\/getsshstate.tcl\r\n  INFO \{Liefert den Zustand des SSH-Zugangs der HomeMatic Zentrale (aktiviert oder deaktiviert)}\r\n  ARGUMENTS \{_session_id_}\r\n}\r\nCCU.setSSHPassword \{\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE ccu\/setsshpassword.tcl\r\n  INFO \{Setzt das Passwort für den SSH-Zugang}\r\n  ARGUMENTS \{_session_id_ passwd}\r\n}\r\nCCU.restartSSHDaemon \{\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE ccu\/restartsshdaemon.tcl\r\n  INFO \{Restartet den SSH-Daemon}\r\n  ARGUMENTS \{_session_id_}\r\n}\r\nBidCoS_Wired.getConfigurationWired \{\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE bidcoswired\/getconfiguration-wired.tcl\r\n  INFO \{Liefert die aktuelle Konfiguration des BidCoS-Wired Dienstes}\r\n  ARGUMENTS \{_session_id_}\r\n}\r\n\r\nBidCoS_Wired.setConfigurationWired \{\r\n  LEVEL ADMIN\r\n  SCRIPT_FILE bidcoswired\/setconfiguration-wired.tcl\r\n  INFO \{Setzt die Konfiguration des BidCoS-Wired Dienstes}\r\n  ARGUMENTS \{_session_id_ interfaces}\r\n}\r\nBidCoS.changeLanGatewayKey \{\r\n\tLEVEL ADMIN\r\n\tSCRIPT_FILE bidcos\/changeLanGatewayKey.tcl\r\n\tINFO \{Bereitet das Setzen eines LAN Gateway Schlüssels vor.}\r\n\tARGUMENTS \{_session_id_ lgwclass lgwserial lgwip newkey curkey}\r\n}\r\nUser.getUserName \{\r\n        LEVEL NONE\r\n        SCRIPT_FILE user\/getusername.tcl\r\n        INFO \{Gibt den Username zurück}\r\n        ARGUMENTS \{_session_id_ userID}\r\n}\r\nUser.isNoExpert \{\r\n        LEVEL NONE\r\n        SCRIPT_FILE user\/isnoexpert.tcl\r\n        INFO \{Ermittelt, ob ein Benutzer Experte ist}\r\n        ARGUMENTS \{_session_id_ id}\r\n}\r\nUser.getLanguage \{\r\n        LEVEL NONE \r\n        SCRIPT_FILE user\/getlanguage.tcl\r\n        INFO \{Ermittelt die gewählte Sprache des Benutzers}\r\n        ARGUMENTS \{userName}\r\n}\r\nUser.setLanguage \{\r\n        LEVEL NONE \r\n        SCRIPT_FILE user\/setlanguage.tcl\r\n        INFO \{Setzt die gewählte Sprache des Benutzers}\r\n        ARGUMENTS \{userName userLang}\r\n}\r\nDiagram.getDiagrams \{\r\n        LEVEL NONE\r\n        SCRIPT_FILE diagram\/getDiagrams.tcl\r\n        INFO \{Ermittelt die zur Verfügung stehenden Messwert-Diagramme}\r\n        ARGUMENTS \{}\r\n}\r\nDiagram.getDataSourceGroups \{\r\n        LEVEL NONE\r\n        SCRIPT_FILE diagram\/getDataSourceGroups.tcl\r\n        INFO \{Ermittelt alle bekannten Gruppen von Datenquellen}\r\n        ARGUMENTS \{}\r\n}","error": null}